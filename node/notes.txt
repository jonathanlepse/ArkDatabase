=======================================
RUNNING THE APP

cd /Users/emilchoski/Documents/App_Dev/OptionHouse_Misc/Data/node/arkdata/ |
DEBUG=optionhouse:* npm start

cd /Users/emilchoski/Documents/App_Dev/OptionHouse_Misc/Data/node/arkdata/

might be needed: npm install


=======================================
COUNTIES TABLE

CREATE TABLE counties (
 id int NOT NULL AUTO_INCREMENT,
 name varchar(100),
 PRIMARY KEY (id)
);

INSERT INTO counties (id, name) VALUES
(1, "Nassau"),
(2, "Suffolk")

=======================================
MUNICIPALITY TABLE

CREATE TABLE municipalities (
 id int NOT NULL AUTO_INCREMENT,
 name varchar(100),
 url varchar(255),
 county_id int,
 updated_on datetime,
 PRIMARY KEY (id),
 FOREIGN KEY (county_id) REFERENCES counties(id)
)

=======================================
SECTION TABLE

CREATE TABLE sections (
 id int NOT NULL AUTO_INCREMENT,
 para varchar(255),
 title varchar(255),
 body text,
 url varchar(255),
 parent_id int,
 municipality_id int,
 PRIMARY KEY (id),
 FOREIGN KEY (parent_id) REFERENCES sections(id)
)

=======================================
TRUNCATE TABLES

TRUNCATE TABLE counties;
TRUNCATE TABLE municipalities;
TRUNCATE TABLE sections;

=======================================
DROP TABLES

DROP TABLE counties;
DROP TABLE municipalities;
DROP TABLE sections;

=======================================
QUERIES

SELECT * FROM sections WHERE body like '%setback%';


=======================================


cd /Users/emilchoski/Documents/App_Dev/OptionHouse_Misc/Data/node/arkdata/ |
DEBUG=optionhouse:* npm start

    if (!(this.url || this.text)) {

        console.log("CAN'T SAVE WITHOUT URL OR TEXT");
        return;
    }

    if (!this.municipality_id) {

        console.log("CAN'T SAVE WITHOUT municipality_id");
        return;
    }

    if (this.saved == true) {
        console.log("TRYING TO SAVE TWICE");
        return;
    }

    this.saved = true;

    var that = this;

    // request_count_saved++;
    log_counts();

    if(that.url){

    } else {

    }
    console.log("that.municipality_id  " + that.municipality_id + "  that.url " + that.url);
    connection.query(
        "SELECT * FROM sections WHERE municipality_id = " + that.municipality_id +
        " AND url LIKE '" + that.url + "'", function (err, rows) {

            if (err) {
                console.log(err);
            } else if (rows.length == 1) {
                var row = rows[0];
                console.log("SECTION FOUND, UPDATING: " + that.url);

                //request_count_saved++;
                //log_counts();

                //console.log(row);
                //console.log(that.name + ", " + that.url + ", " + that.county_id);
                /*
                 connection.query("UPDATE sections SET name = '" + that.name + "', url = '" + that.url +
                 "', county_id = '" + that.county_id + "' WHERE id = " + row.id, function(err, rows) {
                 if(err){
                 console.log(err);
                 }
                 });
                 */


            } else if (rows.length == 0) {

                console.log("that.municipality_id  " + that.municipality_id + "  that.full_section_number() " + that.full_section_number());
                connection.query("SELECT * FROM sections WHERE municipality_id = " + that.municipality_id + +" AND para LIKE '" + that.full_section_number() + "'", function (err, rows) {

                    if (err) {
                        console.log(err);
                    } else if (rows.length == 1) {
                        var row = rows[0];
                        console.log("SECTION FOUND, UPDATING: " + that.full_section_number());

                        //request_count_saved++;
                        //log_counts();

                    } else if (rows.length == 0) {
                        console.log("SECTION NOT FOUND, CREATING NEW");

                        var query_str;
                        if (that.url) {
                            query_str = "INSERT INTO sections (municipality_id, para, title, url) VALUES ('" +
                                that.municipality_id + "','" +
                                that.full_section_number() + "','" +
                                mysql_real_escape_string(that.title) + "','" +
                                that.url + "')";
                        } else if (that.text) {
                            query_str = "INSERT INTO sections (municipality_id, para, title, body) VALUES ('" +
                                that.municipality_id + "','" +
                                that.full_section_number() + "','" +
                                mysql_real_escape_string(that.title) + "','" +
                                mysql_real_escape_string(that.text) + "')";
                        } else {
                            console.log("ERROR");
                        }

                        // console.log(query_str);
                        connection.query(query_str, function (err, rows) {
                            if (err) {
                                console.log(err);


                            }

                            //request_count_saved++;
                            //log_counts();
                        });

                    } else {
                        console.log("ERROR (TOO MANY ROWS RETURNED)");
                    }
                });

            } else {
                console.log("ERROR (TOO MANY ROWS RETURNED)");
            }
        });